{"version":3,"sources":["Slide.js","util/util.js","App.js","serviceWorker.js","index.js","assets/right-arrow.svg","assets/LittleStar.jpg","assets/pizzalogo3.svg","assets/oasisgrillimage.jpg","assets/skewer.svg","assets/umamiburgers.jpg","assets/burger.svg"],"names":["MainDiv","styled","div","_templateObject","TopDiv","_templateObject2","BottomDiv","_templateObject3","FoodLogo","img","_templateObject4","_templateObject5","Container","_templateObject6","FoodBackgroundDiv","_templateObject7","props","image","TitleText","_templateObject8","Slide","react_default","a","createElement","this","slideIndex","LittleStarImage","src","PizzaLogoImage","OasisGrillImage","SkewerLogoImage","UmamiBurgersImage","BurgerLogoImage","Component","getPathInt","path","pathNameArray","split","parseInt","length","RightArrow","App_templateObject","LeftArrow","App_templateObject2","App_templateObject3","ContainerDiv","App_templateObject4","SlideContainer","App_templateObject5","ArrowHolder","App_templateObject6","App","incrementslideIndex","oldSlideIndex","_this","location","pathname","storeLastLocation","newPathSlideNumber","history","push","concat","decrementslideIndex","index","window","lastLocation","isRightAnimation","currentPathname","classNames","right","className","lib","onSwipeLeft","onSwipeRight","onClick","arrowImage","App_MainDiv","react_transition_group","childFactory","child","React","cloneElement","key","timeout","react_router","exact","render","src_Slide","withRouter","Boolean","hostname","match","ReactDOM","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e40fd936.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport LittleStarImage from './assets/LittleStar.jpg';\nimport PizzaLogoImage from './assets/pizzalogo3.svg';\nimport OasisGrillImage from './assets/oasisgrillimage.jpg';\nimport SkewerLogoImage from './assets/skewer.svg';\nimport UmamiBurgersImage from './assets/umamiburgers.jpg';\nimport BurgerLogoImage from './assets/burger.svg';\n\nconst MainDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: purple;\n  position: absolute;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  \n  &.example-enter {\n    transform: translate(100%);\n  }\n\n  &.example-enter-active {\n    transform: translate(0%);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &.example-exit {\n    transform: translate(0%);\n  }\n\n  &.example-exit.example-exit-active {\n    transform: translate(-100%);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &.exampletwo-enter {\n    transform: translate(-100%);\n  }\n\n  &.exampletwo-enter-active {\n    transform: translate(0%);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &.exampletwo-exit {\n    transform: translate(0%);\n  }\n\n  &.exampletwo-exit.exampletwo-exit-active {\n    transform: translate(100%);\n    transition: transform 250ms ease-in-out;\n  }\n\n`\n\nconst TopDiv = styled.div`\n  height: 50%;\n  width: 100%;\n  background-color: black;\n  display: flex;\n  flex-direction: column-reverse;\n`\n\nconst BottomDiv = styled.div`\n  height: 50%;\n  width: 100%;\n  background-color: #141414;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst LittleStar = styled.img`\n  width: 100%;\n  height: auto;\n`\n\nconst FoodLogo = styled.img`\n  width: 70px;\n  height: auto;\n  -webkit-filter: invert(1);\n`\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n`\n\nconst FoodBackgroundDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  background-image: url(${props => (props.image)});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TitleText = styled.div`\n  font-family: roboto;\n  font-size: 35px;\n  background-color: rgba(0,0,0,.3);\n  color: white;\n  padding: 5px;\n  width: 100%;\n`\n\nclass Slide extends Component {\n\n  render() {\n\n    return (\n        <MainDiv>\n          {this.props.slideIndex === 1? \n            <Container>\n            <TopDiv>\n              <FoodBackgroundDiv image={LittleStarImage}>\n                <TitleText>\n                  LITTLESTAR PIZZA\n                </TitleText>\n              </FoodBackgroundDiv>\n            </TopDiv>\n            <BottomDiv>\n              <FoodLogo src={PizzaLogoImage}/>\n            </BottomDiv>\n          </Container>\n          : this.props.slideIndex === 2?\n          <Container>\n            <TopDiv>\n            <FoodBackgroundDiv image={OasisGrillImage}>\n              <TitleText>\n                    OASIS GRILL\n              </TitleText>\n            </FoodBackgroundDiv>\n            </TopDiv>\n            <BottomDiv>\n              <FoodLogo src={SkewerLogoImage}></FoodLogo>\n            </BottomDiv>\n          </Container>\n          :\n          <Container>\n            <TopDiv>\n            <FoodBackgroundDiv image={UmamiBurgersImage}>\n              <TitleText>\n                    UMAMI BURGER\n              </TitleText>\n            </FoodBackgroundDiv>\n            </TopDiv>\n            <BottomDiv>\n              <FoodLogo src={BurgerLogoImage}></FoodLogo>\n            </BottomDiv>\n          </Container>\n          \n          }\n          \n        </MainDiv>\n\n    );\n  }\n}\n\n\nexport default Slide;","import React from 'react';\n\nexport const getPathInt = (path) => {\n    let pathNameArray = path.split(\"/\");\n    let oldSlideIndex = parseInt(pathNameArray[pathNameArray.length - 1])\n\n    return oldSlideIndex\n}\n\nexport const childFactoryCreator = (classNames) => (\n    (child) => (\n      React.cloneElement(child, {\n        classNames\n      })\n    )\n  )","import React, { Component } from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport arrowImage from './assets/right-arrow.svg';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport Slide from './Slide';\nimport {getPathInt, childFactoryCreator} from './util/util'\nimport { Swipeable } from 'react-touch';\n\nconst RightArrow = styled.img`\n  width: 27px;\n  height: auto;\n  cursor: pointer;\n  z-index: 2;\n  margin-right: 2px;\n  margin-left: 2px;\n  -webkit-filter: invert(1);\n\n  &:hover {\n    -webkit-filter: invert(.7);\n  }\n`\n\nconst LeftArrow = styled(RightArrow)`\n  transform: rotate(180deg);\n`\n\nconst MainDiv = styled.div`\n  display: flex;\n  height: 50%;\n  width: 100%;\n  height: 100%;\n  justify-content: space-between;\n  align-items: center;\n  overflow: hidden;\n`\n\nconst ContainerDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  position: relative;\n`\n\nconst SlideContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nconst ArrowHolder = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\theight: auto;\n\tposition: absolute;\n\ttop:0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n  margin: auto;\n  z-index: 2;\n`\n\nclass App extends Component {\n\n  incrementslideIndex = () => {  \n    let oldSlideIndex = getPathInt(this.props.location.pathname);\n    this.storeLastLocation(oldSlideIndex)\n    if (oldSlideIndex < 3) {\n      let newPathSlideNumber = oldSlideIndex + 1;\n      this.props.history.push(`/${newPathSlideNumber}`)\n    }\n  }\n\n  decrementslideIndex = () => {\n    let oldSlideIndex = getPathInt(this.props.location.pathname);\n    this.storeLastLocation(oldSlideIndex)\n\n    if (oldSlideIndex > 1) {\n      let newPathSlideNumber = oldSlideIndex - 1;\n      this.props.history.push(`/${newPathSlideNumber}`)\n    }\n  }\n\n  storeLastLocation = (index) => {\n    window.lastLocation = index;\n  }\n\n  isRightAnimation = () => {\n    let currentPathname = this.props.location.pathname\n    return window.lastLocation && (window.lastLocation < getPathInt(currentPathname))\n  }\n\n  render() {\n\n    let right = this.isRightAnimation();\n\n    return (\n\n      <div className=\"App\">\n        <Swipeable onSwipeLeft={this.incrementslideIndex} onSwipeRight={this.decrementslideIndex}>\n        <ContainerDiv>\n          <ArrowHolder>\n            <LeftArrow onClick={this.decrementslideIndex} src={arrowImage}></LeftArrow>\n            <RightArrow onClick = {this.incrementslideIndex} src={arrowImage}></RightArrow>\n          </ArrowHolder>\n          <MainDiv>\n            <SlideContainer>\n              <TransitionGroup\n                childFactory={childFactoryCreator(right? \"example\": \"exampletwo\")}>\n                <CSSTransition\n                key={this.props.location.key}\n                classNames={right? \"example\": \"exampletwo\"}\n                timeout={250}>\n                  <Switch location={this.props.location}>\n                    <Route exact path=\"/1\" render={() => (<Slide slideIndex={1}/>)} />\n                    <Route exact path=\"/2\" render={() => (<Slide slideIndex={2}/>)} />\n                    <Route exact path=\"/3\" render={() => (<Slide slideIndex={3}/>)} />\n                  </Switch>\n                </CSSTransition>\n              </TransitionGroup>\n            </SlideContainer>\n          </MainDiv>\n        </ContainerDiv>\n        </Swipeable>\n        </div>\n\n\n    );\n  }\n}\n\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/right-arrow.1ee4c3ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/LittleStar.79f12265.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizzalogo3.0eb2a70f.svg\";","module.exports = __webpack_public_path__ + \"static/media/oasisgrillimage.a2b0cd2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skewer.ef99412f.svg\";","module.exports = __webpack_public_path__ + \"static/media/umamiburgers.5b439f02.jpg\";","module.exports = __webpack_public_path__ + \"static/media/burger.172f6dfb.svg\";"],"sourceRoot":""}